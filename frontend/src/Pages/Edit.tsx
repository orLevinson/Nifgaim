import { fieldsExample, exampleData } from "../fields";
import DataTable, { Direction } from "react-data-table-component";
import ExpandedTab from "../Components/Edit/ExpandedTab";
import { useReducer, useState } from "react";
import useTable from "../Shared/Hooks/useTable";

const Edit = () => {
  // MUI really sucks when it comes to RTL support \:

  // const multiFields: string[] = fieldsExample.reduce(
  //   (fields: string[], field) => {
  //     if (field.type === "multi-attributes") {
  //       return [...fields, field.id];
  //     } else {
  //       return fields;
  //     }
  //   },
  //   []
  // );
  // const data: { [key: string]: string }[] = exampleData(fieldsExample).map(
  //   (entryData) => {
  //     let newFormat = { ...entryData };
  //     multiFields.forEach((field) => {
  //       newFormat[field] = "" + Object.keys(newFormat[field]).length;
  //     });
  //     return newFormat as { [key: string]: string };
  //   }
  // );

  const { columnsGenerator, reducer } = useTable();
  // the rows don't need a function to clean and format the data
  const [rows, dispatchRows] = useReducer(reducer, exampleData(fieldsExample));
  // the columns are being generated by a function - the columns state only stores the raw data from the backend
  const [columns, setColumns] = useState(fieldsExample);

  return (
    <div
      style={{ width: "90%", margin: "auto", marginTop: 30, marginBottom: 30 }}
    >
      <DataTable
        columns={columnsGenerator(columns, dispatchRows)}
        data={rows}
        direction={Direction.RTL}
        expandableRows
        highlightOnHover
        pagination
        pointerOnHover
        responsive
        subHeaderWrap
        expandableRowsComponent={({ data }) => {
          return (
            <ExpandedTab
              dispatchRows={dispatchRows}
              columns={columns}
              data={data}
              rowIndex={rows.findIndex((item) => item.id === data.id)}
            />
          );
        }}
        expandOnRowClicked
        expandOnRowDoubleClicked
      />
    </div>
  );
};

export default Edit;
